---
import { Image } from "@unpic/astro";
import { Icon } from "astro-icon";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/png"
      href="/.netlify/images?w=40&h=40&fit=cover&url=%2Fstream.png"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Chalkstream</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Oswald&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="card">
      <h1>
        <Image
          src="/stream.png"
          alt="Chalkstream"
          width={40}
          height={40}
          layout="fixed"
          cdn="netlify"
        />
        <div>Chalkstream</div>
      </h1>
      <div id="videowrap">
        <video id="video" autoplay muted></video>
        <div id="status">Loading...</div>
      </div>

      <div id="controls">
        <button id="start" class="go-live" title="Go live" disabled>
          <span class="record-dot"></span>
        </button>
        <div class="stream-share" hidden>
          <label>Play link</label>
          <input type="text" readonly id="stream-id" />
          <button
            title="Copy stream link"
            onclick="navigator.clipboard.writeText(document.getElementById('stream-id').value)"
          >
            <Icon pack="ion" name="copy-outline" size="20" />
          </button>
          <a
            class="button"
            href=""
            target="_blank"
            title="Open playback page"
            id="playback-link"
          >
            {}<Icon pack="ion" name="share-outline" size="20" />
          </a>
        </div>
      </div>
    </div>
  </body>
</html>

<script>
  import { ChalkStream } from "chalkstream";

  const status = document.getElementById("status") as HTMLDivElement;

  function setStatus(message: string) {
    status.innerText = message;
  }

  const start = document.getElementById("start") as HTMLButtonElement;

  const stream = new ChalkStream({
    onReady: async (streamId) => {
      const link = `${window.location}play/?stream=${streamId}`;
      const playback = document.getElementById(
        "playback-link"
      ) as HTMLAnchorElement;
      playback.href = link;
      playback.hidden = false;
      (
        document.getElementsByClassName("stream-share")![0] as HTMLElement
      ).classList.add("ready");
      const streamIdInput = document.getElementById(
        "stream-id"
      ) as HTMLInputElement;
      streamIdInput.value = link;
      start.disabled = false;
      setStatus("Ready to stream");
    },
    videoElement: document.getElementById("video") as HTMLVideoElement,
    onError: (error) => {
      console.error(error);
      setStatus(error);
    },
    onStreamStart() {
      start.classList.add("recording");
      setStatus("Starting to stream...");
    },
    onChunkUploaded() {
      if (stream.isStreaming) {
        setStatus("Streaming...");
      } else {
        setStatus("Ready to stream");
      }
    },
    onStreamStop() {
      start.classList.remove("recording");
      setStatus("Stopping stream...");
    },
  });

  start.addEventListener("click", async () => {
    if (!stream.isStreaming) {
      stream.start();
    } else {
      stream.stop();
    }
  });

  stream.init();
</script>
<style>
  body {
    font-family:
      "Oswald",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans;
    background: linear-gradient(145deg, #e0f4f4, #e0eff9);
    margin: 0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .card {
    background: linear-gradient(145deg, #003d33, #00264d);
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 30px;
    padding: 14px 20px;
    width: 100%;
    max-width: 500px;
    text-align: center;
  }

  #videowrap {
    max-width: 100%;
    border-radius: 8px;
    min-width: 400px;
    aspect-ratio: 4/3;
    background-color: #f4f4f4;
    display: flex;
    flex-direction: column;
  }

  #video {
    width: 100%;
    flex: 1;
    background-color: #f4f4f4;
    border-radius: 8px 8px 0 0;
    object-fit: cover;
  }

  #status {
    background: linear-gradient(145deg, #7daa9a, #679688);
    border-radius: 0 0 8px 8px;
    padding: 10px 20px;
    font-size: 14px;
    flex-basis: 16px;
    color: #fff;
    text-align: left;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  h1 {
    font-size: 2rem;
    margin-top: 0;
    margin-bottom: 14px;
    font-weight: normal;
    color: #aadbd8;
    display: flex;
    align-items: center;
  }
  h1 img {
    display: inline-block;
    margin-right: 16px;
  }
  .go-live {
    background: linear-gradient(145deg, #a7dbd8, #89c4f4);
    border: none;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    transition:
      box-shadow 0.2s ease-in-out,
      transform 0.2s ease-in-out;
  }

  .go-live:hover {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* Larger shadow on hover */
    transform: scale(1.05); /* Button enlarges a bit on hover */
  }

  .go-live:active {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Smaller shadow on click */
    transform: scale(0.95); /* Button shrinks a bit on click */
  }

  .go-live:disabled,
  .go-live:disabled:active,
  .go-live:disabled:hover {
    background: linear-gradient(145deg, #a7dbd8, #89c4f4);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    cursor: not-allowed;
    transform: none;
  }

  .record-dot {
    background-color: #ff0000;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    transition: all 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
  }

  .stop-shape {
    background-color: #ff4500;
    border-radius: 2px;
    animation: pulsate 1.5s infinite;
  }

  .go-live.go-live:disabled .record-dot {
    background-color: #ff44005f;
    border-radius: 2px;
    height: 10px;
    transform: none;
  }

  .record-dot {
    background-color: #ff0000;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    transition: all 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
  }

  .go-live.recording .record-dot {
    background-color: #ff4500;
    border-radius: 2px;
    animation: pulsate 1.5s infinite;
  }

  #controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
  }

  .stream-share {
    margin-top: 20px;

    display: none;
    grid-template-columns: max-content 1fr 35px 35px;
    gap: 5px;
    width: 100%;
  }

  .stream-share.ready {
    display: grid;
  }

  #stream-id {
    border: none;
    background: #80d0b4;
    padding: 10px;
    border-radius: 4px;
    color: #003d33;
  }

  .stream-share label {
    display: grid;
    place-items: center;
    color: #80d0b4;
    padding-right: 10px;
  }

  .stream-share .button {
    display: grid;
    place-items: center;
  }

  .stream-share button,
  .stream-share .button {
    border: none;
    background: #80d0b4;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    padding: 0;
    color: #003d33;
  }

  .stream-share button:hover,
  .stream-share .button:hover {
    background: #a7dbd8;
  }

  .stream-share button:active,
  .stream-share .button:active {
    background: #89c4f4;
  }

  @keyframes pulsate {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
